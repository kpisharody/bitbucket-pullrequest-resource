'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.mock=undefined;var _entries=require('babel-runtime/core-js/object/entries');var _entries2=_interopRequireDefault(_entries);var _extends2=require('babel-runtime/helpers/extends');var _extends3=_interopRequireDefault(_extends2);var _slicedToArray2=require('babel-runtime/helpers/slicedToArray');var _slicedToArray3=_interopRequireDefault(_slicedToArray2);var _os=require('os');var _os2=_interopRequireDefault(_os);var _path=require('path');var _path2=_interopRequireDefault(_path);var _memfs=require('memfs');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var isWindows=_os2.default.platform()==='win32';var root=isWindows?process.cwd().split(_path2.default.sep)[0]:'/';var flatten=function flatten(absolutePath,object){var accumulate=function accumulate(all,_ref){var _ref2=(0,_slicedToArray3.default)(_ref,2),currentPath=_ref2[0],value=_ref2[1];var joinedPath=_path2.default.join(absolutePath,currentPath);var fullPath=_path2.default.isAbsolute(currentPath)?currentPath:joinedPath;if(typeof value==='string'){return(0,_extends3.default)({},all,{[fullPath]:value});}else{return(0,_extends3.default)({},all,flatten(fullPath,value));}};return(0,_entries2.default)(object).reduce(accumulate,{});};var read=function read(filename){return require.requireActual('fs').readFileSync(filename,'utf8');};var files=function files(){return _memfs.vol.toJSON();};var _mock=function _mock(){var filesystem=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var fsRoot=arguments.length>1&&arguments[1]!==undefined?arguments[1]:root;_memfs.vol.fromJSON(flatten(fsRoot,filesystem),fsRoot);};var _unmock=function _unmock(){var files=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var fsRoot=arguments.length>1&&arguments[1]!==undefined?arguments[1]:root;var readAll=function readAll(all,file){return(0,_extends3.default)({},all,{[file]:read(file)});};var filesystem=files.reduce(readAll,{});_mock(filesystem,fsRoot);};var restore=function restore(){return _memfs.vol.reset();};var jestFs={root,files,read,restore,mock:function mock(filesystem){return _mock(filesystem,jestFs.root);},unmock:function unmock(files){return _unmock(files,jestFs.root);}};exports.mock=_memfs.fs;exports.default=jestFs;